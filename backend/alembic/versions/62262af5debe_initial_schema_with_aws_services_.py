"""Initial schema with AWS services, resources, cost history, and scan history

Revision ID: 62262af5debe
Revises: 
Create Date: 2025-10-29 11:31:35.710535

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '62262af5debe'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('aws_services',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('service_code', sa.String(length=100), nullable=False),
    sa.Column('service_name', sa.String(length=100), nullable=False),
    sa.Column('service_category', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('resource_count', sa.Integer(), nullable=True),
    sa.Column('first_seen', sa.TIMESTAMP(), nullable=False),
    sa.Column('last_seen', sa.TIMESTAMP(), nullable=False),
    sa.Column('total_cost_30d', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('service_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_aws_services_id'), 'aws_services', ['id'], unique=False)
    op.create_index(op.f('ix_aws_services_is_active'), 'aws_services', ['is_active'], unique=False)
    op.create_index(op.f('ix_aws_services_service_code'), 'aws_services', ['service_code'], unique=True)
    op.create_table('scan_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scan_type', sa.String(length=50), nullable=False),
    sa.Column('services_found', sa.Integer(), nullable=True),
    sa.Column('resources_found', sa.Integer(), nullable=True),
    sa.Column('unused_resources', sa.Integer(), nullable=True),
    sa.Column('duration_seconds', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('started_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('completed_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_scan_history_id'), 'scan_history', ['id'], unique=False)
    op.create_index(op.f('ix_scan_history_started_at'), 'scan_history', ['started_at'], unique=False)
    op.create_index(op.f('ix_scan_history_status'), 'scan_history', ['status'], unique=False)
    op.create_table('cost_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('cost', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('usage_quantity', sa.DECIMAL(precision=15, scale=4), nullable=True),
    sa.Column('usage_unit', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['service_id'], ['aws_services.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('service_id', 'date', name='uq_service_date')
    )
    op.create_index(op.f('ix_cost_history_date'), 'cost_history', ['date'], unique=False)
    op.create_index(op.f('ix_cost_history_id'), 'cost_history', ['id'], unique=False)
    op.create_table('resources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('resource_id', sa.String(length=255), nullable=False),
    sa.Column('resource_type', sa.String(length=100), nullable=False),
    sa.Column('resource_name', sa.String(length=255), nullable=True),
    sa.Column('region', sa.String(length=50), nullable=False),
    sa.Column('is_unused', sa.Boolean(), nullable=True),
    sa.Column('unused_reason', sa.String(length=255), nullable=True),
    sa.Column('cost_monthly', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('resource_config', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('first_seen', sa.TIMESTAMP(), nullable=False),
    sa.Column('last_seen', sa.TIMESTAMP(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['service_id'], ['aws_services.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('resource_id', 'region', name='uq_resource_region')
    )
    op.create_index(op.f('ix_resources_id'), 'resources', ['id'], unique=False)
    op.create_index(op.f('ix_resources_is_unused'), 'resources', ['is_unused'], unique=False)
    op.create_index(op.f('ix_resources_region'), 'resources', ['region'], unique=False)
    op.create_index(op.f('ix_resources_service_id'), 'resources', ['service_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_resources_service_id'), table_name='resources')
    op.drop_index(op.f('ix_resources_region'), table_name='resources')
    op.drop_index(op.f('ix_resources_is_unused'), table_name='resources')
    op.drop_index(op.f('ix_resources_id'), table_name='resources')
    op.drop_table('resources')
    op.drop_index(op.f('ix_cost_history_id'), table_name='cost_history')
    op.drop_index(op.f('ix_cost_history_date'), table_name='cost_history')
    op.drop_table('cost_history')
    op.drop_index(op.f('ix_scan_history_status'), table_name='scan_history')
    op.drop_index(op.f('ix_scan_history_started_at'), table_name='scan_history')
    op.drop_index(op.f('ix_scan_history_id'), table_name='scan_history')
    op.drop_table('scan_history')
    op.drop_index(op.f('ix_aws_services_service_code'), table_name='aws_services')
    op.drop_index(op.f('ix_aws_services_is_active'), table_name='aws_services')
    op.drop_index(op.f('ix_aws_services_id'), table_name='aws_services')
    op.drop_table('aws_services')
    # ### end Alembic commands ###
